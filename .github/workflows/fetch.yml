name: Fetch Challenge Files

on:
  workflow_dispatch:

jobs:
  fetch-challenge:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-east-1

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ap-east-1 | docker login --username AWS --password-stdin 396961015104.dkr.ecr.ap-east-1.amazonaws.com

      - name: Pull challenge Docker image
        run: |
          docker pull 396961015104.dkr.ecr.ap-east-1.amazonaws.com/challenges/imaginary-challenge:latest

      - name: Create container
        id: create-container
        run: |
          CONTAINER_ID=$(docker create 396961015104.dkr.ecr.ap-east-1.amazonaws.com/challenges/imaginary-challenge:latest /bin/sh)
          echo "CONTAINER_ID=$CONTAINER_ID" >> $GITHUB_ENV

      - name: Export filesystem from container
        run: |
          mkdir -p exported_fs
          docker cp $CONTAINER_ID:/ ./exported_fs/

      - name: Find likely encrypted flag files
        run: |
          echo "Searching for files with likely flag data..."
          find exported_fs -type f -name "not-flag-yet" -exec chmod +r {} \; 
          # adjust the filename pattern if the encrypted flag has a different name

      - name: Run decryption script
        run: |
          python3 decrypt_script.py exported_fs/ decrypt_output.txt

      - name: Upload extracted files as artifact
        uses: actions/upload-artifact@v4
        with:
          name: challenge-files
          # any output your decrypt_script.py might write
          path: |
            exported_fs/**
            image_layers/**
            *.txt
            decrypt_output*
